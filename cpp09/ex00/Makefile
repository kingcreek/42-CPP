# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: imurugar <imurugar@student.42madrid.com    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2023/11/07 07:27:03 by imurugar          #+#    #+#              #
#    Updated: 2023/12/30 20:09:13 by imurugar         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# SIMPLE ===================================================================================
NAME = btc
# ==========================================================================================

# SRCS =====================================================================================
SRCS_DIR = src/
SRCS =	main.cpp \
		BitcoinExchange.cpp \
# ==========================================================================================

# INCLUDES =================================================================================
INCS_DIR = inc/
INCLUDE = -I$(INCS_DIR)
# ==========================================================================================

# DEPEDENCIES ==============================================================================
DEPS = $(INCS_DIR)/
# ==========================================================================================

# FLAGS ====================================================================================
DEBUG = -g #-fsanitize=address
FLAGS = $(DEBUG) -std=c++98 -pedantic -Wall -Wextra -Werror $(INCLUDE)
# ==========================================================================================

# UTILS ====================================================================================
CC		= c++ #clang++
RM		= rm -rf
# ==========================================================================================

# OBJS =====================================================================================
OBJS_DIR 	= 	objects/
OBJ 		= 	$(SRCS:.cpp=.o)
OBJS 		= 	$(addprefix $(OBJS_DIR), $(OBJ))
# ==========================================================================================

# COLORS  ==================================================================================
GREEN		=	\e[92;5;118m
YELLOW		=	\e[93;5;226m
GRAY		=	\e[33;2;37m
RED 		= 	\e[91m
RESET		=	\e[0m
CURSIVE		=	\e[33;3m
CHECKMARK 	= 	âœ”
# ==========================================================================================

# COUNT  ===================================================================================
COUNT = 0
TOTAL = $(words $(SRCS))
# ==========================================================================================

# FROM SUBJECT =============================================================================
$(OBJS_DIR)%.o :	$(SRCS_DIR)%.cpp
	@mkdir -p $(OBJS_DIR)
	@$(eval COUNT = $(shell echo $$(($(COUNT) + 1))))
	@printf "$(YELLOW)Compiling:$(RESET) [$(GREEN)%3d%%$(RESET)]\r" $$(($(COUNT) * 100 / $(TOTAL)))
	@$(CC) $(FLAGS) -c $< -o $@
	
$(NAME): $(OBJS)
	@$(CC)  $(FLAGS) -o $(NAME) $(OBJS)
	@printf "$(GREEN)$(CHECKMARK)    - Executable ready.\n$(RESET)"

all: $(NAME)

clean:
	@$(RM) $(OBJS_DIR)
	@printf "$(RED)$(CHECKMARK)    - Objects removed.$(RESET)\n"

fclean: clean
	@$(RM) $(NAME)
	@printf "$(YELLOW)$(CHECKMARK)    - Executable removed.$(RESET)\n"

re: fclean all
# ==========================================================================================

# SUP ======================================================================================
check: $(NAME)
	./$(NAME)
# ==========================================================================================

.PHONY: all clean fclean re
